// __multiversion__
// This shader is from the Gameface library modified to work in the
// Bedrock engine and heavily depends on Gameface's functionality, why
// some numbers and values seem arbitrary or "magic".

#include "uniformUIEffectsPixelConstants.h"
#include "fragmentVersionCentroidUV.h"

varying vec4 ColorOut;
varying vec4 AdditionalOut;
// We need this here even if we do not use it as some drivers require
// the verying variables to match between the vertex and fragment shaders.
varying vec3 ScreenNormalPosition;

LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;

void main() {
	vec4 outColor = vec4(0.0, 0.0, 0.0, 0.0);

	for (int i = 0; i < BLUR_STEPS; ++i) {
		vec4 coeffVec = COEFFICIENTS[i / 4];
		float coeff = coeffVec[int(mod(float(i), 4.0))];
		vec2 offset;
		vec4 pixelOffsetX = PIXEL_OFFSETS[(i*2) / 4];
		vec4 pixelOffsetY = PIXEL_OFFSETS[(i*2 + 1) / 4];
		offset.x = pixelOffsetX[int(mod(float(i*2), 4.0))];
		offset.y = pixelOffsetY[int(mod(float(i*2 + 1), 4.0))];

		outColor += coeff * (texture2D(TEXTURE_0, AdditionalOut.xy + offset) + texture2D(TEXTURE_0, AdditionalOut.xy - offset));
	}

	gl_FragColor = outColor * ColorOut.a;
}
